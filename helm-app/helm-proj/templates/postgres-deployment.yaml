apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "postgres.fullname" . }}
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  labels:
    app: {{ include "postgres.name" . }}
spec:
  replicas: {{ .Values.postgres.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "postgres.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "postgres.name" . }}
    spec:
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          env:
            - name: POSTGRES_USER
              value: "{{ .Values.postgres.auth.user }}"
            - name: POSTGRES_PASSWORD
              value: "{{ .Values.postgres.auth.password }}"
            - name: POSTGRES_DB
              value: "{{ .Values.postgres.auth.database }}"
          ports:
            - containerPort: {{ .Values.postgres.containerPort }}
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: pgdata
          emptyDir: {} # Replace with PVC if needed
